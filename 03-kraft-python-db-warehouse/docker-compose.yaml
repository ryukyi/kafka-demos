services:
  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server broker:29092 || exit 1"]
      interval: 1s
      timeout: 10s
      retries: 60

  init-broker:
    image: apache/kafka:latest
    container_name: init-broker
    depends_on:
      broker:
        condition: service_healthy
    entrypoint: "/opt/kafka/bin/kafka-topics.sh --create --topic python-events --bootstrap-server broker:29092"

  python-consumer:
    container_name: python-consumer
    build:
      context: ./python-consumer
    depends_on:
      init-broker:
        condition: service_completed_successfully
    environment:
      KAFKA_BOOTSTRAP_SERVERS: broker:29092

  python-producer:
    container_name: python-producer
    build:
      context: ./python-producer
    depends_on:
      python-consumer:
        condition: service_started
    command: bash -c "sleep 5"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: broker:29092
